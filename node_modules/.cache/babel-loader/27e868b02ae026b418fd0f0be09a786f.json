{"remainingRequest":"/home/ziaur/Desktop/vuetifyjs/e-learning-front/node_modules/babel-loader/lib/index.js!/home/ziaur/Desktop/vuetifyjs/e-learning-front/node_modules/eslint-loader/index.js??ref--13-0!/home/ziaur/Desktop/vuetifyjs/e-learning-front/src/store/module/application.js","dependencies":[{"path":"/home/ziaur/Desktop/vuetifyjs/e-learning-front/src/store/module/application.js","mtime":1604021501640},{"path":"/home/ziaur/Desktop/vuetifyjs/e-learning-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ziaur/Desktop/vuetifyjs/e-learning-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ziaur/Desktop/vuetifyjs/e-learning-front/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/ziaur/Desktop/vuetifyjs/e-learning-front/src/store/module/application.js"],"names":["api","state","error","statusCode","errorMsg","indexData","test","getters","actions","parameters","rootState","commit","token","auth","fetchAllData","response","setIndexData","fetchData","store","storeData","delete","deleteData","getLessonQuestion","getQuestion","responseUpdate","setErrorZero","mutations","setAnswerResponse","responseData","data","setResponse","setErrorToZero","responseMsg","setTest","credentials"],"mappings":"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","sourcesContent":["import api from '../../api/e-learning'\n// import router from '../../router';\n\nconst state = {\n    error: '',\n    statusCode:'',\n    errorMsg: '',\n    indexData: [],\n    test: ''\n}\n\nconst getters = {\n    error: (state) =>{\n        return state.error\n    },\n    statusCode: (state) => {\n        return state.statusCode\n    },\n    errorMsg: (state) => {\n        return state.errorMsg\n    },\n    \n    indexData: (state) => {\n        return state.indexData\n    },\n}\n\nconst actions = {\n    async indexData({rootState, commit}, parameters){\n        const{ token } = rootState.auth\n        const response = await api.fetchAllData(token, parameters[0],parameters[1])\n        commit('setAnswerResponse', response)\n    },\n\n    async setIndexData({rootState, commit}, parameters){\n        const{ token } = rootState.auth\n        const response = await api.fetchData(token, parameters[0])\n        commit('setResponse', response)\n    },\n\n    async store({rootState, commit},parameters){\n        const { token } = rootState.auth\n        const response = await api.storeData(token, parameters[0], parameters[1])\n        commit('setResponse', response)\n        // router.push('/task')\n    },\n    \n    async delete({rootState, commit}, parameters){\n        const { token } = rootState.auth\n        const response = await api.deleteData(token, parameters[0], parameters[1])\n        commit('setResponse', response)\n    },\n    async getLessonQuestion({rootState, commit}, parameters){\n        const { token } = rootState.auth\n        const response = await api.getQuestion(token, parameters[0], parameters[1])\n        commit('setResponse', response)\n    },\n\n    async responseUpdate({rootState, commit}, parameters){\n        const { token } = rootState.auth\n        const response = await api.storeData(token, parameters[0], parameters[1])\n        commit('setAnswerResponse', response)\n    },\n    \n    setErrorZero({commit}){\n        commit('setErrorToZero')\n    }\n    \n}\n\nconst mutations = {\n    setAnswerResponse: (state, responseData) => {\n        // state.test = responseData\n        if(responseData.data.error == 1){\n            state.statusCode = responseData.data.statusCode\n            state.error = responseData.data.error\n            state.errorMsg = responseData.data.errorMsg\n        }else{\n            state.error = responseData.data.error\n            state.statusCode = responseData.data.statusCode\n            state.errorMsg = responseData.data.errorMsg\n        }\n    },\n    setResponse: (state, responseData) => {\n        // state.test = responseData\n        if(responseData.data.error == 1){\n            state.statusCode = responseData.data.statusCode\n            state.error = responseData.data.error\n            state.errorMsg = responseData.data.errorMsg\n        }else{\n            state.error = responseData.data.error\n            state.statusCode = responseData.data.statusCode\n            state.errorMsg = responseData.data.errorMsg\n            state.indexData = responseData.data.data\n        }\n    },\n    setErrorToZero: (state) => {\n        state.error = 0\n        state.responseMsg = \"\"\n    },\n    setTest: (state, credentials) => {\n        state.test = credentials[0] + '/' + credentials[1] + credentials[2]\n    }\n}\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n}"]}]}