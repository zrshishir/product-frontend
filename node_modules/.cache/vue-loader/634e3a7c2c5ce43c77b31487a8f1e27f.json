{"remainingRequest":"/home/ziaur/Desktop/vuetifyjs/product-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ziaur/Desktop/vuetifyjs/product-frontend/src/views/auth/Signup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ziaur/Desktop/vuetifyjs/product-frontend/src/views/auth/Signup.vue","mtime":1608747178705},{"path":"/home/ziaur/Desktop/vuetifyjs/product-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ziaur/Desktop/vuetifyjs/product-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ziaur/Desktop/vuetifyjs/product-frontend/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/ziaur/Desktop/vuetifyjs/product-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ziaur/Desktop/vuetifyjs/product-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7bWFwR2V0dGVycywgbWFwQWN0aW9uc30gZnJvbSAndnVleCcKICBleHBvcnQgZGVmYXVsdCB7CiAgICBkYXRhOiAoKSA9PiAoewogICAgICB2YWxpZDogdHJ1ZSwKICAgICAgYWxsRm9ybURhdGE6IHsKICAgICAgICBuYW1lOiAnJywKICAgICAgICBlbWFpbDogJycsCiAgICAgICAgcGFzc3dvcmQ6IG51bGwsCiAgICAgICAgcGFzc3dvcmRfY29uZmlybWF0aW9uOiBudWxsCiAgICAgIH0sCiAgICAgIAogICAgICBzaG93MTogZmFsc2UsCiAgICAgIG5hbWVSdWxlczogWwogICAgICAgIHYgPT4gISF2IHx8ICdOYW1lIGlzIHJlcXVpcmVkJwogICAgICBdLAogICAgICBlbWFpbFJ1bGVzOiBbCiAgICAgICAgdiA9PiAvLisuQC4rLy50ZXN0KHYpIHx8ICdFLW1haWwgbXVzdCBiZSB2YWxpZCcsCiAgICAgIF0sCgogICAgICAKICAgICAgcGFzc3dvcmRSdWxlczogWwogICAgICAgICAgICB2ID0+ICEhdiB8fCAncGFzc3dvcmQgaXMgcmVxdWlyZWQnLAogICAgICAgICAgICB2ID0+ICh2ICYmIHYubGVuZ3RoID4gNSkgfHwgJ21pbmltdW0gNiBjaGFyYWN0ZXJzJywKICAgICAgXSwKICAgICAgCiAgICAgIHBhc3N3b3JkX2NvbmZpcm1hdGlvbjogbnVsbCwKICAgICAgY29uZmlybVBhc3N3b3JkUnVsZXM6WwogICAgICAgICAgdiA9PiAhIXYgfHwgJ3Bhc3N3b3JkIGlzIHJlcXVpcmVkJywKICAgICAgICAgIHYgPT4gKHYgJiYgdi5sZW5ndGggPiA1KSB8fCAnbWluaW11bSA2IGNoYXJhY3RlcnMnLAogICAgICBdLAogICAgICBjaGVja2JveDogZmFsc2UsCiAgICB9KSwKCiAgICBjb21wdXRlZDp7CiAgICAgIC4uLm1hcEdldHRlcnMoWydpc0xvZ2dlZEluJywgJ2dldEF1dGhSZXNwb25zZSddKSwgCiAgICB9LAoKICAgIG1ldGhvZHM6IHsKICAgICAgdmFsaWRhdGUgKCkgewogICAgICAgIGlmICh0aGlzLmFsbEZvcm1EYXRhLnBhc3N3b3JkICE9IHRoaXMuYWxsRm9ybURhdGEucGFzc3dvcmRfY29uZmlybWF0aW9uKSB7CiAgICAgICAgICByZXR1cm4gdGhpcy5zaG93MSA9IHRydWUKICAgICAgICB9ZWxzZXsKICAgICAgICAgIHRoaXMuc2hvdzEgPSBmYWxzZQogICAgICAgIH0KCiAgICAgICAgaWYodGhpcy4kcmVmcy5mb3JtLnZhbGlkYXRlKCkpewogICAgICAgICAgdGhpcy5zbmFja2JhciA9IHRydWUKICAgICAgICB9CiAgICAgIH0sCiAgICAgIHJlc2V0ICgpIHsKICAgICAgICB0aGlzLiRyZWZzLmZvcm0ucmVzZXQoKQogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdzZXRFcnJvclplcm8nKQogICAgICB9LAogICAgICByZXNldFZhbGlkYXRpb24gKCkgewogICAgICAgIHRoaXMuJHJlZnMuZm9ybS5yZXNldFZhbGlkYXRpb24oKQogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdzZXRFcnJvclplcm8nKQogICAgICB9LAoKICAgICAgLi4ubWFwQWN0aW9ucyhbJ3JlZ2lzdGVyJ10pLAogICAgfQogIH0K"},{"version":3,"sources":["Signup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Signup.vue","sourceRoot":"src/views/auth","sourcesContent":["<template>\n    <v-container v-if=\"! isLoggedIn\">\n        <v-layout text-xs-center text-md-center>\n            <v-flex xs1 sm1 md2 lg3></v-flex>\n            <v-flex xs10 sm1 md8 lg6>\n                <v-layout row wrap justify-center>\n                    <h5 class=\"display-2 font-weight-bold mb-3 text-center\">\n                        Registration\n                    </h5>\n                </v-layout>\n                <v-layout v-if=\"getAuthResponse\" row wrap justify-center>\n                    <v-alert\n                      :value=\"getAuthResponse\"\n                      type=\"warning\"\n                    >\n                    {{getAuthResponse}}\n                    </v-alert>\n                </v-layout>\n                <v-form\n                    ref=\"form\"\n                    v-model=\"valid\"\n                    lazy-validation\n                >\n                      <v-text-field\n                        v-model=\"allFormData.name\"\n                        :rules=\"nameRules\"\n                        label=\"Name\"\n                        required\n                      ></v-text-field>\n\n                    <v-text-field\n                    v-model=\"allFormData.email\"\n                    :rules=\"emailRules\"\n                    label=\"E-mail\"\n                    required\n                    ></v-text-field>\n\n                    <v-text-field\n                    v-model=\"allFormData.password\"\n                    type=\"password\"\n                    :rules=\"passwordRules\"\n                    label=\"Password\"\n                    required\n                    ></v-text-field>\n\n                    <v-text-field\n                    v-model=\"allFormData.password_confirmation\"\n                    type=\"password\"\n                    :rules=\"confirmPasswordRules\"\n                    label=\"Password\"\n                    required\n                    ></v-text-field>\n                    <p v-if=\"show1\" class=\"error\">the password you have given do not match</p>\n\n                    <!-- <v-checkbox\n                    v-model=\"checkbox\"\n                    :rules=\"[v => !!v || 'You must agree to continue!']\"\n                    label=\"Do you agree?\"\n                    required\n                    ></v-checkbox> -->\n\n                    <v-btn\n                    :disabled=\"!valid\"\n                    color=\"success\"\n                    @click=\"register(allFormData)\"\n                    >\n                    Submit\n                    </v-btn>\n\n                    <v-btn\n                    color=\"error\"\n                    @click=\"reset\"\n                    >\n                    Reset Form\n                    </v-btn>\n\n                    <v-btn\n                    color=\"warning\"\n                    @click=\"resetValidation\"\n                    >\n                    Reset Validation\n                    </v-btn>\n                </v-form>\n            </v-flex>\n            <v-flex xs1 sm1 md2 lg3></v-flex>\n        </v-layout>\n    </v-container>\n</template>\n<script>\nimport {mapGetters, mapActions} from 'vuex'\n  export default {\n    data: () => ({\n      valid: true,\n      allFormData: {\n        name: '',\n        email: '',\n        password: null,\n        password_confirmation: null\n      },\n      \n      show1: false,\n      nameRules: [\n        v => !!v || 'Name is required'\n      ],\n      emailRules: [\n        v => /.+.@.+/.test(v) || 'E-mail must be valid',\n      ],\n\n      \n      passwordRules: [\n            v => !!v || 'password is required',\n            v => (v && v.length > 5) || 'minimum 6 characters',\n      ],\n      \n      password_confirmation: null,\n      confirmPasswordRules:[\n          v => !!v || 'password is required',\n          v => (v && v.length > 5) || 'minimum 6 characters',\n      ],\n      checkbox: false,\n    }),\n\n    computed:{\n      ...mapGetters(['isLoggedIn', 'getAuthResponse']), \n    },\n\n    methods: {\n      validate () {\n        if (this.allFormData.password != this.allFormData.password_confirmation) {\n          return this.show1 = true\n        }else{\n          this.show1 = false\n        }\n\n        if(this.$refs.form.validate()){\n          this.snackbar = true\n        }\n      },\n      reset () {\n        this.$refs.form.reset()\n        this.$store.dispatch('setErrorZero')\n      },\n      resetValidation () {\n        this.$refs.form.resetValidation()\n        this.$store.dispatch('setErrorZero')\n      },\n\n      ...mapActions(['register']),\n    }\n  }\n</script>"]}]}